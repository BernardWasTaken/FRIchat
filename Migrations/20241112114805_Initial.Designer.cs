// <auto-generated />
using FRIchat.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FRIchat.Migrations
{
    [DbContext(typeof(FRIchatContext))]
    [Migration("20241112114805_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("FRIchat.Models.Objava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Avtor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DatumObjave")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PredmetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tip")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Vsebina")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Objava");
                });

            modelBuilder.Entity("FRIchat.Models.Odgovor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DatumObjave")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UporabnikId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Vsebina")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Odgovor");
                });

            modelBuilder.Entity("FRIchat.Models.OdgovorObjava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ObjavaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OdgovorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("OdgovorObjava");
                });

            modelBuilder.Entity("FRIchat.Models.Predmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Letnik")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Predavatelj")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Predmet");
                });

            modelBuilder.Entity("FRIchat.Models.Uporabnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Geslo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Uporabnik");
                });
#pragma warning restore 612, 618
        }
    }
}
